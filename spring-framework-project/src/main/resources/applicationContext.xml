<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">


    <!-- Enable AOP support -->
    <aop:aspectj-autoproxy/>

    <!-- Database Properties -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- DataSource Bean -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <!-- JdbcTemplate -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- DAO and Service Beans -->
    <bean id="employeeDAO" class="com.example.xml.dao.EmployeeDAOImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean id="employeeService" class="com.example.xml.service.EmployeeServiceImpl">
        <property name="employeeDAO" ref="employeeDAO"/>
    </bean>

    <!-- UserDAO Bean -->
    <bean id="userDAO" class="com.example.xml.dao.UserDAOImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <!-- Optional Service Bean -->
    <bean id="userService" class="com.example.xml.service.UserServiceImpl">
        <property name="userDAO" ref="userDAO"/>
    </bean>

    <!-- Define LoggingAspect -->
    <bean id="loggingAspect" class="com.example.aspect.LoggingAspect"/>

    <!-- AOP configuration -->
    <aop:config>
        <!-- Define an aspect for logging -->
        <aop:aspect ref="loggingAspect">
            <!-- Before advice: Executes before methods in EmployeeService -->
            <aop:before method="logBeforeMethod" pointcut="execution(* com.example.xml.service.EmployeeServiceImpl.*(..))"/>

            <!-- After advice: Executes after methods in EmployeeService -->
            <aop:after method="logAfterMethod" pointcut="execution(* com.example.xml.service.EmployeeServiceImpl.*(..))"/>

            <!-- After-returning advice: Executes after methods return -->
            <aop:after-returning method="logAfterReturning" pointcut="execution(* com.example.xml.service.EmployeeServiceImpl.*(..))" returning="result"/>
        </aop:aspect>
    </aop:config>

</beans>
